
----------- NEW TOPIC
........... BREAK BETWEEN SUBTOPICS
///////////	SUBTOPIC

-------------------------------SCANNING NETWORKS------------------------------

///////////////////////////WHAT IS SCANNING???????/////////////////////////////////

	From Reco we have found our targets. It was really high level. So we found range of
	the ip adresses or owners of them.
	SCANNING is simply looking for live systems, for some we can use simple tools, for some
	it is more complex. 
	Next step after identification is to go thruogh and try to discover what ports are open
	or closed and how they respond for the respones.
	Based on this ports which services are running and how can I use them.
	
	///////////////////////////TYPES OF SCANNING???????/////////////////////////////////

	1. Network scan - putting packet to the network that is going to look at every single device
					  on the network and go through and try to identify it and as it tries to 
					  identify it reports back which host is currently on.
						
					OBJECTIVES:
						1.1. Find all "live" hosts
						1.2. Possibly see OS's (router, switch, printer)
						1.3. Pick up IP adresses
						
	2. Port scan - (port is an ip adress with attached protocol E.g. ip + http -> ip:80 ).
	
	3. Vulnerability Scan - Identify possible threats to OS/Apps, identify vulnerabilities OS/Apps.
	
	///////////////////////////TECHNIQUES USED/////////////////////////////////

	1. Internal or External
	2. Not just computers (printers and switches either.)
	3. WiFi
	4. Banner Grabbing - takes adventage of how server responds to identify it.
	
	
	///////////////////////////WHAT TOOLS ARE USED/////////////////////////////////

	1. Command Line
	2*. Nmap https://nmap.org/
	3*. Angry IP Scanner  http://angryip.org/download/#windows
	4. Solarwinds
	5. Colasoft Ping http://www.colasoft.com/download/products/download_ping_tool.php
	6. Visual Ping Tester http://www.pingtester.net/
	7. Ping Scanner Pro https://www.netscantools.com/nstpro_ping_scanner.html
	8*. Nessus - https://www.tenable.com/products/nessus-vulnerability-scanner?
	
	*More attention should be taken for them ;)
.............................................................................................

		///////////////////////////3 WAY HANDSHAKE/////////////////////////////////
		
		///////////////////////////TCP COMMUNICATIONS/////////////////////////////////
		If computer devices want to talk to each other they need to have some way to do this
		and there are two ways:
		1. TCP
		2. UDP
		
		STAGES OF TCP
		1. NEGOTIATE A CONNECTION:
			- Hi Can we connect to transfer some data ? : )
			
		2. DELIVERY ACKNOWLEDGEMENTS:
			- I got package from you, keep going.
			
		3. ERROR DETECTION.
		
		4. IN ORDER DELIVERY.
		
		TCP is slower than UDP beceause it has more stages and header as well (20 bytes).
		Bigger overhead and stream oriented.
		
		

	///////////////////////////UDP COMMUNICATIONS/////////////////////////////////	
		1. Connectionless based.
		2. Smaller packets(8 bytes).
		3. Only 1 packet goes.
		4. Out of order.
		5. No congestion control.
		6. Message-oriented.
	
	///////////////////////////TCP HEADER FLAGS////////////////////////////////////
	They represent different types of communications and connections we would like to establish.
		1. SYNC - Synchronization (Includes a seq number ).-
				  Sequance numbers themselves do not actually increase sequentially but they are 
				  linked to the source machine and destination machine. Technically it is randomized
				  based off of the payload and that number can be anywhere from 0 to 9to9to9.
				  MOST OF TOOLS like wireshark will display only the relative sequance and 
				  acknowlegement numbers in place of the actual numbers, which makes it little bit
				  easier to see.
		2. ACK - Acknoledgment - I GOT YOUR REQUEST THAT YOU'D LIKE TO DO SMTH.
								 I GOT YOUR MESSAGE.
		3. FIN - FINNISH.
		
		4. PSH - PUSH. I need push data to You.
		
		5. URG - Urgent. I need send this immediately.
		
		6. RST - Reset. I need reset connection.
		
						NORMAL 3 WAY HANDSHAKE:
				|PC 1 |						|PC 2|
				PC 1 need to set
				up connection with
				PC 2. So he sends
				Syn with sq nr

					SYN  # 101->
									PC 2 responds to it
									with SYN/ACK.
									
						<-#Your(102) #My(#508)SYN/ACK
									I got your sequance, 
									here is mine and your incremented.
				
				ACK #Your(509) My(102)->
				Yea Your right, my was 102
				and your next is 509.
				
					AFTER SOURCE PC IS DONE TRANSFERING:
					
					FIN -> 				
					I wanna stop now.
											<-ACK/FIN
										Ok i ACKNOWLEDGE THAT.
										I will tell Apps to Stop.
					ACK ->
					Ok.. Nice talking 
					to You.
					
	